public function pdf() {

		    $claimNum = array(
		    	"claimNum" => $_POST['cari']
		    );
		    //print_r($claimNum);die();

		    
		    $result_getclaim = $this->portal->getClaim($claimNum);
		    //print_r($result_getclaim);die();

		    //If exists, set detailed data. Else redirect back because invalid code
			if (count($result_getclaim->body->data)>0) {
				for ($i=0,$n=count($result_getclaim->body->data->details);$i<$n; $i++) {  
					$detail[]=array(
						'itemDesc' 		=> $result_getclaim->body->data->details[$i]->itemDesc,
						'quantity' 		=> $result_getclaim->body->data->details[$i]->quantity,
						'claimDesc' 	=> $result_getclaim->body->data->details[$i]->claimDesc,
						'prodCode' 		=> $result_getclaim->body->data->details[$i]->prodCode,
						'mdNotes' 		=> $result_getclaim->body->data->details[$i]->mdNotes,
						'approveFlag' 	=> $result_getclaim->body->data->details[$i]->approveFlag,
						'sriNotes' 		=> $result_getclaim->body->data->details[$i]->sriNotes,
					);
				}

					$data['reportdata']=array(
						'claimNum'		=> $result_getclaim->body->data->claimNum,
						'customerId'  	=> $result_getclaim->body->data->customerId,
						'customerName' 	=> $result_getclaim->body->data->customerName,
						'shipId' 		=> $result_getclaim->body->data->shipId,
						'shipName' 		=> $result_getclaim->body->data->shipName,
						'claimDate' 	=> $result_getclaim->body->data->claimDate,
						'status' 		=> $result_getclaim->body->data->status,
						'address' 		=> $result_getclaim->body->data->address,
						'email' 		=> $result_getclaim->body->data->email,
						'phone' 		=> $result_getclaim->body->data->phone,
						'notes' 		=> $result_getclaim->body->data->notes,
						'seqNum' 		=> $result_getclaim->body->data->seqNum,
						'details'		=> $detail
					);
				}
		$param          = $this->uri->segment(3);
        $data['report_analyze'] = $this->portal->getClaim();
        $data['param']  = $param;
        $this->load->view('reportpdf',$data);

		}
